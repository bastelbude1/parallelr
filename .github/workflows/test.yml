name: Test Suite

on:
  push:
    branches: [ master, feature/** ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Run Tests (Python 3.6.8)
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.6.8
      uses: actions/setup-python@v5
      with:
        python-version: '3.6.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tests/requirements-test.txt
        # Install optional dependencies for full functionality
        pip install pyyaml psutil || true

    - name: Run unit tests
      run: |
        pytest tests/unit/ -v --tb=short

    - name: Run integration tests
      run: |
        pytest tests/integration/ -v --tb=short

    - name: Run security tests
      run: |
        pytest tests/security/ -v --tb=short

    - name: Run all tests with coverage
      run: |
        pip install pytest-cov
        pytest tests/ --cov=bin/parallelr.py --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint Code
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.6.8'

    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install pylint flake8

    - name: Run pylint
      run: |
        pylint bin/parallelr.py --disable=C0103,C0114,C0115,C0116 || true

    - name: Run flake8
      run: |
        flake8 bin/parallelr.py --max-line-length=120 --ignore=E501,W503 || true

  test-legacy:
    name: Run Legacy Bash Tests
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.6.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyyaml psutil || true

    - name: Run multi-argument tests
      run: |
        cd test_cases/arguments_mode
        bash test_multi_args_suite.sh

    - name: Run backward compatibility tests
      run: |
        cd test_cases/arguments_mode
        bash run_tests.sh

  summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [test, lint, test-legacy]
    if: always()

    steps:
    - name: Check test results
      run: |
        echo "Test job status: ${{ needs.test.result }}"
        echo "Lint job status: ${{ needs.lint.result }}"
        echo "Legacy test job status: ${{ needs.test-legacy.result }}"

        if [ "${{ needs.test.result }}" != "success" ]; then
          echo "❌ Tests failed"
          exit 1
        fi

        if [ "${{ needs.test-legacy.result }}" != "success" ]; then
          echo "❌ Legacy tests failed"
          exit 1
        fi

        echo "✅ All tests passed!"
